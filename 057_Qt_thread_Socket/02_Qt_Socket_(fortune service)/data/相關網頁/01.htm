<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0056)http://blog.csdn.net/aaa20090987/article/details/6789562 -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>QT：Qsocket长连接的实现（多线程服务器） - 小豪之家 - 博客频道 - CSDN.NET</title>

<meta name="description" content="废话少说：直接上代码PS：为了减少代码量，这里忽略了链接出错时的错误处理//服务器端//dialog.h#ifndef DIALOG_H#define DIALOG_H#include #include #include fortuneserver.hclass Dialog : public QDialog{    Q_OBJECTpublic:">
<script type="text/javascript" async="" src="./01_files/ga.js"></script><script src="./01_files/jquery.js" type="text/javascript"></script>
<script src="./01_files/plugins.js" type="text/javascript"></script>
<script src="./01_files/common.js" type="text/javascript"></script>
<script type="text/javascript" src="./01_files/ad.js"></script>
<link rel="Stylesheet" type="text/css" href="./01_files/style.css">
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blog.csdn.net/AAA20090987/rss/list">
<link rel="shortcut icon" href="http://blog.csdn.net/favicon.ico">
<link type="text/css" rel="stylesheet" href="./01_files/blue.css">
<script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/document_iterator.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/find_proxy.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/get_html_text.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/global_constants.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/name_injection_builder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/number_injection_builder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/string_finder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/change_sink.js"></script><meta name="document_iterator.js"><meta name="find_proxy.js"><meta name="get_html_text.js"><meta name="global_constants.js"><meta name="name_injection_builder.js"><meta name="number_injection_builder.js"><meta name="string_finder.js"><meta name="change_sink.js"><style id="wrc-middle-css" type="text/css">.wrc_whole_window{	display: none;	position: fixed; 	z-index: 2147483647;	background-color: rgba(40, 40, 40, 0.9);	word-spacing: normal !important;	margin: 0px !important;	padding: 0px !important;	border: 0px !important;	left: 0px;	top: 0px;	width: 100%;	height: 100%;	line-height: normal !important;	letter-spacing: normal !important;	overflow: hidden;}.wrc_bar_window{	display: none;	position: fixed; 	z-index: 2147483647;	background-color: rgba(60, 60, 60, 1.0);	word-spacing: normal !important;	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	margin: 0px !important;	padding: 0px !important;	border: 0px !important;	left: 0px;	top: 0px;	width: 100%;	height: 40px;	line-height: normal !important;	letter-spacing: normal !important;	color: white !important;	font-size: 13px !important;}.wrc_middle {	display: table-cell;	vertical-align: middle;	width: 100%;}.wrc_middle_main {	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	font-size: 14px;	width: 600px;	height: auto;    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/background-body.jpg) repeat-x left top;	background-color: rgb(39, 53, 62);	position: relative;	margin-left: auto;	margin-right: auto;	text-align: left;}.wrc_middle_tq_main {	font-family: Segoe UI, Arial Unicode MS, Arial, Sans-Serif;	font-size: 16px;	width: 615px;	height: 460px;    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/background-sitecorrect.png) no-repeat;	background-color: white;	color: black !important;	position: relative;	margin-left: auto;	margin-right: auto;	text-align: center;}.wrc_middle_logo {    background: url(chrome-extension://icmlaeflemplmjndnaapfdbbnpncnbda/skin/images/logo.jpg) no-repeat left bottom;    width: 140px;    height: 42px;    color: orange;    display: table-cell;    text-align: right;    vertical-align: middle;}.wrc_icon_warning {	margin: 20px 10px 20px 15px;	float: left;	background-color: transparent;}.wrc_middle_title {    color: #b6bec7;	height: auto;    margin: 0px auto;	font-size: 2.2em;	white-space: nowrap;	text-align: center;}.wrc_middle_hline {    height: 2px;	width: 100%;    display: block;}.wrc_middle_description {	text-align: center;	margin: 15px;	font-size: 1.4em;	padding: 20px;	height: auto;	color: white;	min-height: 3.5em;}.wrc_middle_actions_main_div {	margin-bottom: 15px;	text-align: center;}.wrc_middle_actions_blue_button div {	display: inline-block;	width: auto;	cursor: Pointer;	margin: 3px 10px 3px 10px;	color: white;	font-size: 1.2em;	font-weight: bold;}.wrc_middle_actions_blue_button {	-moz-appearance: none;	border-radius: 7px;	-moz-border-radius: 7px/7px;	border-radius: 7px/7px;	background-color: rgb(0, 173, 223) !important;	display: inline-block;	width: auto;	cursor: Pointer;	border: 2px solid #00dddd;	padding: 0px 20px 0px 20px;}.wrc_middle_actions_blue_button:hover {	background-color: rgb(0, 159, 212) !important;}.wrc_middle_actions_blue_button:active {	background-color: rgb(0, 146, 200) !important;	border: 2px solid #00aaaa;}.wrc_middle_actions_grey_button div {	display: inline-block;	width: auto;	cursor: Pointer;	margin: 3px 10px 3px 10px;	color: white !important;	font-size: 15px;	font-weight: bold;}.wrc_middle_actions_grey_button {	-moz-appearance: none;	border-radius: 7px;	-moz-border-radius: 7px/7px;	border-radius: 7px/7px;	background-color: rgb(100, 100, 100) !important;	display: inline-block;	width: auto;	cursor: Pointer;	border: 2px solid #aaaaaa;	text-decoration: none;	padding: 0px 20px 0px 20px;}.wrc_middle_actions_grey_button:hover {	background-color: rgb(120, 120, 120) !important;}.wrc_middle_actions_grey_button:active {	background-color: rgb(130, 130, 130) !important;	border: 2px solid #00aaaa;}.wrc_middle_action_low {	font-size: 0.9em;	white-space: nowrap;	cursor: Pointer;	color: grey !important;	margin: 10px 10px 0px 10px;	text-decoration: none;}.wrc_middle_action_low:hover {	color: #aa4400 !important;}.wrc_middle_actions_rest_div {	padding-top: 5px;	white-space: nowrap;	text-align: center;}.wrc_middle_action {	white-space: nowrap;	cursor: Pointer;	color: red !important;	font-size: 1.2em;	margin: 10px 10px 0px 10px;	text-decoration: none;}.wrc_middle_action:hover {	color: #aa4400 !important;}</style><script id="wrc-script-middle_window" type="text/javascript" language="JavaScript">var g_inputsCnt = 0;var g_InputThis = new Array(null, null, null, null);var g_alerted = false;/* we test the input if it includes 4 digits   (input is a part of 4 inputs for filling the credit-card number)*/function is4DigitsCardNumber(val){	var regExp = new RegExp('[0-9]{4}');	return (val.length == 4 && val.search(regExp) == 0);}/* testing the whole credit-card number 19 digits devided by three '-' symbols or   exactly 16 digits without any dividers*/function isCreditCardNumber(val){	if(val.length == 19)	{		var regExp = new RegExp('[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}');		return (val.search(regExp) == 0);	}	else if(val.length == 16)	{		var regExp = new RegExp('[0-9]{4}[0-9]{4}[0-9]{4}[0-9]{4}');		return (val.search(regExp) == 0);	}	return false;}function CheckInputOnCreditNumber(self){	if(g_alerted)		return false;	var value = self.value;	if(self.type == 'text')	{		if(is4DigitsCardNumber(value))		{			var cont = true;			for(i = 0; i < g_inputsCnt; i++)				if(g_InputThis[i] == self)					cont = false;			if(cont && g_inputsCnt < 4)			{				g_InputThis[g_inputsCnt] = self;				g_inputsCnt++;			}		}		g_alerted = (g_inputsCnt == 4);		if(g_alerted)			g_inputsCnt = 0;		else			g_alerted = isCreditCardNumber(value);	}	return g_alerted;}function CheckInputOnPassword(self){	if(g_alerted)		return false;	var value = self.value;	if(self.type == 'password')	{		g_alerted = (value.length > 0);	}	return g_alerted;}function onInputBlur(self, bRatingOk, bFishingSite){	var bCreditNumber = CheckInputOnCreditNumber(self);	var bPassword = CheckInputOnPassword(self);	if((!bRatingOk || bFishingSite == 1) && (bCreditNumber || bPassword) )	{		var warnDiv = document.getElementById("wrcinputdiv");		if(warnDiv)		{			/* show the warning div in the middle of the screen */			warnDiv.style.left = "0px";			warnDiv.style.top = "0px";			warnDiv.style.width = "100%";			warnDiv.style.height = "100%";			document.getElementById("wrc_warn_fs").style.display = 'none';			document.getElementById("wrc_warn_cn").style.display = 'none';			if(bFishingSite)				document.getElementById("wrc_warn_fs").style.display = 'block';			else				document.getElementById("wrc_warn_cn").style.display = 'block';			warnDiv.style.display = 'table';		}	}}</script></head>
<body>
<script src="./01_files/pub_topnav_2011.js" type="text/javascript"></script><link rel="stylesheet" type="text/css" href="./01_files/navtop_2012.css">
<div class="nav_top_2011">
<p><span style="color:red;">您还未登录！</span>|<a href="https://passport.csdn.net/account/login" target="_top">登录</a>|<a href="https://passport.csdn.net/account/register" target="_top">注册</a>|<a href="https://passport.csdn.net/help/faq" target="_blank">帮助</a></p><ul>
<li><a href="http://www.csdn.net/" target="_blank">首页</a></li>
<li><a href="http://news.csdn.net/" target="_blank">业界</a></li>
<li><a href="http://mobile.csdn.net/" target="_blank">移动</a></li>
<li><a href="http://cloud.csdn.net/" target="_blank">云计算</a></li>
<li><a href="http://sd.csdn.net/" target="_blank">研发</a></li>
<li><a href="http://bbs.csdn.net/" target="_blank">论坛</a></li>
<li><a href="http://blog.csdn.net/" target="_blank">博客</a></li>
<li><a href="http://download.csdn.net/" target="_blank">下载</a></li>
<li class="more"><h2 id="topnav_btnmore" onclick="showNavMore(this)"><a href="javascript:void(0);">更多</a></h2>
<div id="topnav_hidlist">
<iframe name="nav_frm" src="about:blank" width="92" height="178" scrolling="no" frameborder="no"></iframe>
</div>
</li>
</ul>
</div>


<div id="container">
<div id="header">
    <div class="header">
        <div id="blog_title">
            <h1><a href="http://blog.csdn.net/AAA20090987">小豪之家</a></h1>
            <h2>一个热爱生活的普通C++程序员</h2>
            <div class="clear"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg"></div>
    <div class="navigator">
        <ul>
            <li id="btnContents"><a href="http://blog.csdn.net/AAA20090987?viewmode=contents"><span><img src="./01_files/ico_list.gif">目录视图</span></a></li>
            <li id="btnView"><a href="http://blog.csdn.net/AAA20090987?viewmode=list"><span><img src="./01_files/ico_summary.gif">摘要视图</span></a></li>
            <li id="btnRss"><a href="http://blog.csdn.net/AAA20090987/rss/list"><span><img src="./01_files/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "AAA20090987";
    var blog_address = "http://blog.csdn.net/aaa20090987";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>
        
<div id="body">
<div id="main">
<div class="main">
<div class="notice"> 

<a href="http://blog.csdn.net/blogdevteam/article/details/8424776" target="_blank">
<font color="blue">
2013年4月微软MVP申请开始啦！   </font></a>

&nbsp;&nbsp;

<a href="http://bbs.csdn.net/topics/390330213" target="_blank"><font color="red">写给13岁的CSDN论坛 </font></a>

&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/8424675" target="_blank"><font color="red">CSDN博客频道年终送好礼！</font></a>


<br>





<a href="http://vote.blog.csdn.net/details/blogstar" target="_blank">
<font color="red">2012CSDN博客之星评选正式上线 </font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/zhangoi391/article/details/8161343" target="_blank">
<font color="red">2000元大奖征异构开发博文  </font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://huiyi.csdn.net/cmdn/view/183" target="_blank">
<font color="red">Q14年互联网产品进化史   </font></a>

</div><div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Original"></span>
    <h3>
        <span class="link_title"><a href="./01_files/01.htm">
        QT：Qsocket长连接的实现（多线程服务器）
        </a></span>
    </h3>
</div>

        
    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="http://blog.csdn.net/AAA20090987/article/category/880004">QT小例子</a> 
        </span>
    <span class="link_postdate">2011-09-19 12:00</span>
    <span class="link_view" title="阅读次数">1817人阅读</span>
    <span class="link_comments" title="评论次数"><a href="http://blog.csdn.net/aaa20090987/article/details/6789562#comments">评论</a>(11)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle(&#39;QT：Qsocket长连接的实现（多线程服务器）&#39;,&#39;6789562&#39;);return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" onclick="javascript:report(6789562,2);return false;" title="举报">举报</a></span>
    
</div>


    
<div id="article_content" class="article_content">

<p></p>
<p>废话少说：直接上代码</p>
<p>PS：为了减少代码量，这里忽略了链接出错时的错误处理</p>
<p><br>
</p>
<p></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/aaa20090987/article/details/6789562#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/aaa20090987/article/details/6789562#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/aaa20090987/article/details/6789562#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 532px; top: 488px; width: 27px; height: 13px; z-index: 99;"><div style="display: block; cursor: pointer; text-align: center; width: 27px; height: 13px; top: auto; left: auto; position: static;"><div style="-webkit-transition: opacity 150ms ease-out; background-image: url(chrome-extension://gofhjkjmkpinhpoiabjplobcaignabnl/icon_play.png); text-align: left; opacity: 0.25; border: 1px solid rgb(0, 0, 0); width: 100%; height: 100%; background-color: rgba(193, 217, 244, 0.498039); background-repeat: no-repeat no-repeat;"></div></div><embed id="ZeroClipboardMovie_1" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="27" height="13" name="ZeroClipboardMovie_1" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=1&amp;width=27&amp;height=13" wmode="transparent" style="display: none !important;"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="comment">//服务器端</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="comment">//dialog.h</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#ifndef&nbsp;DIALOG_H</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;DIALOG_H</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#include&nbsp;&lt;QtGui&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QtNetwork&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"fortuneserver.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">class</span><span>&nbsp;Dialog&nbsp;:&nbsp;</span><span class="keyword">public</span><span>&nbsp;QDialog&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Q_OBJECT&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">public</span><span>:&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Dialog(QWidget&nbsp;*parent&nbsp;=&nbsp;0);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">private</span><span>:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QLabel&nbsp;*statusLabel;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QPushButton&nbsp;*quitButton;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;FortuneServer&nbsp;server;&nbsp;&nbsp;</span></li><li class="alt"><span>};&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#endif</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//fortuneserver.h</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#ifndef&nbsp;FORTUNESERVER_H</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;FORTUNESERVER_H</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QStringList&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;&lt;QTcpServer&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">class</span><span>&nbsp;FortuneServer&nbsp;:&nbsp;</span><span class="keyword">public</span><span>&nbsp;QTcpServer&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Q_OBJECT&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">public</span><span>:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;FortuneServer(QObject&nbsp;*parent&nbsp;=&nbsp;0);&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">protected</span><span>:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;incomingConnection(</span><span class="datatypes">int</span><span>&nbsp;socketDescriptor);&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">private</span><span>:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QStringList&nbsp;fortunes;&nbsp;&nbsp;</span></li><li class="alt"><span>};&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#endif</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//fortunethread.h</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#ifndef&nbsp;FORTUNETHREAD_H</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;FORTUNETHREAD_H</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QThread&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;&lt;QTcpSocket&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">class</span><span>&nbsp;FortuneThread&nbsp;:&nbsp;</span><span class="keyword">public</span><span>&nbsp;QThread&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Q_OBJECT&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">public</span><span>:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;FortuneThread(<span class="datatypes">int</span><span>&nbsp;socketDescriptor,&nbsp;QObject&nbsp;*parent);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;run();&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">private</span><span>:&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">int</span><span>&nbsp;socketDescriptor;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QString&nbsp;theString;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QTcpSocket&nbsp;*tcpSocket;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;qint16&nbsp;blockSize;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;slots:&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;readMessage();&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;sendMessage();&nbsp;&nbsp;</span></span></li><li class="alt"><span>signals:&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;error(QTcpSocket::SocketError&nbsp;socketError);&nbsp;&nbsp;</span></span></li><li class="alt"><span>};&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#endif</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//dialog.cpp</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"dialog.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>Dialog::Dialog(QWidget&nbsp;*parent)&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;QDialog(parent)&nbsp;&nbsp;</span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;statusLabel&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QLabel;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;quitButton&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QPushButton(tr(</span><span class="string">"Quit"</span><span>));&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;quitButton-&gt;setAutoDefault(<span class="keyword">false</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(!server.listen(QHostAddress::Any,&nbsp;8888))&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QMessageBox::critical(<span class="keyword">this</span><span>,&nbsp;tr(</span><span class="string">"Threaded&nbsp;Fortune&nbsp;Server"</span><span>),&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tr(<span class="string">"Unable&nbsp;to&nbsp;start&nbsp;the&nbsp;server:&nbsp;%1."</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.arg(server.errorString()));&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QString&nbsp;ipAddress;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QList&lt;QHostAddress&gt;&nbsp;ipAddressesList&nbsp;=&nbsp;QNetworkInterface::allAddresses();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>&nbsp;(</span><span class="datatypes">int</span><span>&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;ipAddressesList.size();&nbsp;++i)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(ipAddressesList.at(i)&nbsp;!=&nbsp;QHostAddress::LocalHost&nbsp;&amp;&amp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ipAddressesList.at(i).toIPv4Address())&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ipAddress&nbsp;=&nbsp;ipAddressesList.at(i).toString();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(ipAddress.isEmpty())&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ipAddress&nbsp;=&nbsp;QHostAddress(QHostAddress::LocalHost).toString();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;statusLabel-&gt;setText(tr(<span class="string">"The&nbsp;server&nbsp;is&nbsp;running&nbsp;on\n\nIP:&nbsp;%1\nport:&nbsp;%2\n\n"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"Run&nbsp;the&nbsp;Fortune&nbsp;Client&nbsp;example&nbsp;now."</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.arg(ipAddress).arg(server.serverPort()));&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;connect(quitButton,&nbsp;SIGNAL(clicked()),&nbsp;<span class="keyword">this</span><span>,&nbsp;SLOT(close()));&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QHBoxLayout&nbsp;*buttonLayout&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QHBoxLayout;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;buttonLayout-&gt;addStretch(1);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;buttonLayout-&gt;addWidget(quitButton);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;buttonLayout-&gt;addStretch(1);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QVBoxLayout&nbsp;*mainLayout&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QVBoxLayout;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;mainLayout-&gt;addWidget(statusLabel);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;mainLayout-&gt;addLayout(buttonLayout);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;setLayout(mainLayout);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;setWindowTitle(tr(<span class="string">"Threaded&nbsp;Fortune&nbsp;Server"</span><span>));&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//fortuneserver.cpp</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"fortuneserver.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"fortunethread.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>FortuneServer::FortuneServer(QObject&nbsp;*parent)&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;QTcpServer(parent)&nbsp;&nbsp;</span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;FortuneServer::incomingConnection(</span><span class="datatypes">int</span><span>&nbsp;socketDescriptor)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;FortuneThread&nbsp;*<span class="keyword">thread</span><span>&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;FortuneThread(socketDescriptor,&nbsp;</span><span class="keyword">this</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;connect(<span class="keyword">thread</span><span>,&nbsp;SIGNAL(finished()),&nbsp;</span><span class="keyword">thread</span><span>,&nbsp;SLOT(deleteLater()));&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">thread</span><span>-&gt;start();&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//fortunethread.cpp</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"fortunethread.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>FortuneThread::FortuneThread(<span class="datatypes">int</span><span>&nbsp;socketDescriptor,&nbsp;QObject&nbsp;*parent)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;QThread(parent),&nbsp;socketDescriptor(socketDescriptor)&nbsp;&nbsp;</span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;blockSize&nbsp;=&nbsp;0;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;FortuneThread::run()&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;tcpSocket&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QTcpSocket;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(!tcpSocket-&gt;setSocketDescriptor(socketDescriptor))&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;emit&nbsp;error(tcpSocket-&gt;error());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;connect(tcpSocket,&nbsp;SIGNAL(readyRead()),&nbsp;<span class="keyword">this</span><span>,&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SLOT(readMessage()),&nbsp;Qt::DirectConnection);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;exec();&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;FortuneThread::readMessage()&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QDataStream&nbsp;in(tcpSocket);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;in.setVersion(QDataStream::Qt_4_0);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(blockSize&nbsp;==&nbsp;0)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(tcpSocket-&gt;bytesAvailable()&nbsp;&lt;&nbsp;(</span><span class="datatypes">int</span><span>)</span><span class="keyword">sizeof</span><span>(quint16))&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;&gt;&gt;&nbsp;blockSize;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(tcpSocket-&gt;bytesAvailable()&nbsp;&lt;&nbsp;blockSize)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;&gt;&gt;&nbsp;theString;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;blockSize&nbsp;=&nbsp;0;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;sendMessage();&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;FortuneThread::sendMessage()&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QByteArray&nbsp;block;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QDataStream&nbsp;out(&amp;block,&nbsp;QIODevice::WriteOnly);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;out.setVersion(QDataStream::Qt_4_0);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;&lt;&lt;&nbsp;(quint16)0;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;&lt;&lt;&nbsp;theString;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;out.device()-&gt;seek(0);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;&lt;&lt;&nbsp;(quint16)(block.size()&nbsp;-&nbsp;<span class="keyword">sizeof</span><span>(quint16));&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;tcpSocket-&gt;write(block);&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//main.cpp</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QApplication&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;&lt;QtCore&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;"dialog.h"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="datatypes">int</span><span>&nbsp;main(</span><span class="datatypes">int</span><span>&nbsp;argc,&nbsp;</span><span class="datatypes">char</span><span>&nbsp;*argv[])&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QApplication&nbsp;app(argc,&nbsp;argv);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Dialog&nbsp;dialog;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;dialog.show();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;dialog.exec();&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">//客户端</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">//client.h</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#ifndef&nbsp;TRYCLI_H_</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;TRYCLI_H_</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QtNetwork&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;&lt;QtGui&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QtCore&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">class</span><span>&nbsp;Client&nbsp;:&nbsp;</span><span class="keyword">public</span><span>&nbsp;QWidget&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Q_OBJECT&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">private</span><span>:&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">bool</span><span>&nbsp;isConnected;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QLineEdit&nbsp;*serverIpEdit;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QLabel&nbsp;*label;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QLineEdit&nbsp;*strEdit;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QPushButton&nbsp;*startButton;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QTcpSocket&nbsp;*tcpClient;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;quint16&nbsp;blockSize;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QString&nbsp;sendString;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QString&nbsp;readString;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">public</span><span>:&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Client();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;~Client();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;slots:&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;displayError(QAbstractSocket::SocketError&nbsp;socketError);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;newConnect();&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;readMessage();&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">void</span><span>&nbsp;sendMessage();&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>};&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#endif</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//client.cpp</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"client.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QtGui/QMessageBox&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;&lt;QtGui/QHBoxLayout&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QtEvents&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>Client::Client()&nbsp;&nbsp;</span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;setWindowTitle(<span class="string">"Client"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;resize(300,&nbsp;100);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;serverIpEdit&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QLineEdit(</span><span class="string">"127.0.0.1"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;startButton&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QPushButton(</span><span class="string">"start"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;strEdit&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QLineEdit;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;label&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QLabel(</span><span class="string">"Emtpy"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;isConnected&nbsp;=&nbsp;<span class="keyword">false</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QVBoxLayout&nbsp;*layout&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QVBoxLayout;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(serverIpEdit);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(label);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(strEdit);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;layout-&gt;addWidget(startButton);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;setLayout(layout);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;tcpClient&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;QTcpSocket(</span><span class="keyword">this</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;connect(startButton,&nbsp;SIGNAL(clicked()),&nbsp;<span class="keyword">this</span><span>,&nbsp;SLOT(newConnect()));&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;connect(tcpClient,&nbsp;SIGNAL(connected()),&nbsp;<span class="keyword">this</span><span>,&nbsp;SLOT(sendMessage()));&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;connect(tcpClient,&nbsp;SIGNAL(readyRead()),&nbsp;<span class="keyword">this</span><span>,&nbsp;SLOT(readMessage()));&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;connect(tcpClient,&nbsp;SIGNAL(error(QAbstractSocket::SocketError)),&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">this</span><span>,&nbsp;SLOT(displayError(QAbstractSocket::SocketError)));&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>Client::~Client()&nbsp;&nbsp;</span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;Client::newConnect()&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;blockSize&nbsp;=&nbsp;0;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(!isConnected)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcpClient-&gt;abort();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcpClient-&gt;connectToHost(serverIpEdit-&gt;text(),&nbsp;8888);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isConnected&nbsp;=&nbsp;<span class="keyword">true</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sendMessage();&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;Client::sendMessage()&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QByteArray&nbsp;block;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QDataStream&nbsp;out(&amp;block,&nbsp;QIODevice::WriteOnly);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;out.setVersion(QDataStream::Qt_4_0);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;sendString&nbsp;=&nbsp;strEdit-&gt;text();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;&lt;&lt;&nbsp;(quint16)0;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;&lt;&lt;&nbsp;sendString;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;out.device()-&gt;seek(0);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;&lt;&lt;&nbsp;(quint16)(block.size()&nbsp;-&nbsp;<span class="keyword">sizeof</span><span>(quint16));&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;tcpClient-&gt;write(block);&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;Client::readMessage()&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;QDataStream&nbsp;in(tcpClient);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;in.setVersion(QDataStream::Qt_4_0);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(blockSize&nbsp;==&nbsp;0)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(tcpClient-&gt;bytesAvailable()&nbsp;&lt;&nbsp;(</span><span class="datatypes">int</span><span>)</span><span class="keyword">sizeof</span><span>(quint16))&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;&gt;&gt;&nbsp;blockSize;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>&nbsp;(tcpClient-&gt;bytesAvailable()&nbsp;&lt;&nbsp;blockSize)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;&gt;&gt;&nbsp;readString;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;label-&gt;setText(readString);&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;Client::displayError(QAbstractSocket::SocketError&nbsp;socketError)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">switch</span><span>&nbsp;(socketError)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;QAbstractSocket::RemoteHostClosedError:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;QAbstractSocket::HostNotFoundError:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QMessageBox::information(<span class="keyword">this</span><span>,&nbsp;tr(</span><span class="string">"Fortune&nbsp;Client"</span><span>),&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tr(<span class="string">"The&nbsp;host&nbsp;was&nbsp;not&nbsp;found.&nbsp;Please&nbsp;check&nbsp;the&nbsp;"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"host&nbsp;name&nbsp;and&nbsp;port&nbsp;settings."</span><span>));&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;QAbstractSocket::ConnectionRefusedError:&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QMessageBox::information(<span class="keyword">this</span><span>,&nbsp;tr(</span><span class="string">"Fortune&nbsp;Client"</span><span>),&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tr(<span class="string">"The&nbsp;connection&nbsp;was&nbsp;refused&nbsp;by&nbsp;the&nbsp;peer.&nbsp;"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"Make&nbsp;sure&nbsp;the&nbsp;fortune&nbsp;server&nbsp;is&nbsp;running,&nbsp;"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"and&nbsp;check&nbsp;that&nbsp;the&nbsp;host&nbsp;name&nbsp;and&nbsp;port&nbsp;"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"settings&nbsp;are&nbsp;correct."</span><span>));&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">default</span><span>:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QMessageBox::information(<span class="keyword">this</span><span>,&nbsp;tr(</span><span class="string">"Fortune&nbsp;Client"</span><span>),&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tr(<span class="string">"The&nbsp;following&nbsp;error&nbsp;occurred:&nbsp;%1."</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.arg(tcpClient-&gt;errorString()));&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">//main.cpp</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&nbsp;"client.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&nbsp;&lt;QtGui/QApplication&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="datatypes">int</span><span>&nbsp;main(</span><span class="datatypes">int</span><span>&nbsp;argc,&nbsp;</span><span class="datatypes">char</span><span>&nbsp;*argv[])&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;QApplication&nbsp;a(argc,&nbsp;argv);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Client&nbsp;w;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;w.show();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;a.exec();&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="cpp" style="display: none;">//服务器端
//dialog.h
#ifndef DIALOG_H
#define DIALOG_H

#include &lt;QtGui&gt;
#include &lt;QtNetwork&gt;
#include "fortuneserver.h"

class Dialog : public QDialog
{
    Q_OBJECT

public:
    Dialog(QWidget *parent = 0);

private:
    QLabel *statusLabel;
    QPushButton *quitButton;
    FortuneServer server;
};

#endif



//fortuneserver.h
#ifndef FORTUNESERVER_H
#define FORTUNESERVER_H

#include &lt;QStringList&gt;
#include &lt;QTcpServer&gt;

class FortuneServer : public QTcpServer
{
    Q_OBJECT
public:
    FortuneServer(QObject *parent = 0);
protected:
    void incomingConnection(int socketDescriptor);
private:
    QStringList fortunes;
};

#endif



//fortunethread.h
#ifndef FORTUNETHREAD_H
#define FORTUNETHREAD_H

#include &lt;QThread&gt;
#include &lt;QTcpSocket&gt;

class FortuneThread : public QThread
{
    Q_OBJECT
public:
    FortuneThread(int socketDescriptor, QObject *parent);
    void run();
private:
    int socketDescriptor;
    QString theString;
	QTcpSocket *tcpSocket;
	qint16 blockSize;

	public slots:
		void readMessage();
		void sendMessage();
signals:
		void error(QTcpSocket::SocketError socketError);
};

#endif



//dialog.cpp
#include "dialog.h"

Dialog::Dialog(QWidget *parent)
    : QDialog(parent)
{
    statusLabel = new QLabel;
    quitButton = new QPushButton(tr("Quit"));
    quitButton-&gt;setAutoDefault(false);

    if (!server.listen(QHostAddress::Any, 8888)) 
	{
        QMessageBox::critical(this, tr("Threaded Fortune Server"),
                              tr("Unable to start the server: %1.")
                              .arg(server.errorString()));
        close();
        return;
    }

    QString ipAddress;
    QList&lt;QHostAddress&gt; ipAddressesList = QNetworkInterface::allAddresses();
    for (int i = 0; i &lt; ipAddressesList.size(); ++i) {
        if (ipAddressesList.at(i) != QHostAddress::LocalHost &amp;&amp;
            ipAddressesList.at(i).toIPv4Address()) {
            ipAddress = ipAddressesList.at(i).toString();
            break;
        }
    }
    if (ipAddress.isEmpty())
        ipAddress = QHostAddress(QHostAddress::LocalHost).toString();
    statusLabel-&gt;setText(tr("The server is running on\n\nIP: %1\nport: %2\n\n"
                            "Run the Fortune Client example now.")
                         .arg(ipAddress).arg(server.serverPort()));

    connect(quitButton, SIGNAL(clicked()), this, SLOT(close()));

    QHBoxLayout *buttonLayout = new QHBoxLayout;
    buttonLayout-&gt;addStretch(1);
    buttonLayout-&gt;addWidget(quitButton);
    buttonLayout-&gt;addStretch(1);

    QVBoxLayout *mainLayout = new QVBoxLayout;
    mainLayout-&gt;addWidget(statusLabel);
    mainLayout-&gt;addLayout(buttonLayout);
    setLayout(mainLayout);

    setWindowTitle(tr("Threaded Fortune Server"));
}



//fortuneserver.cpp
#include "fortuneserver.h"
#include "fortunethread.h"

FortuneServer::FortuneServer(QObject *parent)
    : QTcpServer(parent)
{
}

void FortuneServer::incomingConnection(int socketDescriptor)
{
    FortuneThread *thread = new FortuneThread(socketDescriptor, this);
    connect(thread, SIGNAL(finished()), thread, SLOT(deleteLater()));
    thread-&gt;start();
}



//fortunethread.cpp
#include "fortunethread.h"

FortuneThread::FortuneThread(int socketDescriptor, QObject *parent)
    : QThread(parent), socketDescriptor(socketDescriptor)
{
	blockSize = 0;
	
}

void FortuneThread::run()
{
	tcpSocket = new QTcpSocket;
	if (!tcpSocket-&gt;setSocketDescriptor(socketDescriptor))
	{
		emit error(tcpSocket-&gt;error());
		return;
	}
	connect(tcpSocket, SIGNAL(readyRead()), this, 
		SLOT(readMessage()), Qt::DirectConnection);
	exec();
}

void FortuneThread::readMessage()
{
	QDataStream in(tcpSocket);
	in.setVersion(QDataStream::Qt_4_0);
	if (blockSize == 0)
	{
		if (tcpSocket-&gt;bytesAvailable() &lt; (int)sizeof(quint16))
			return;
		in &gt;&gt; blockSize;
	}
	if (tcpSocket-&gt;bytesAvailable() &lt; blockSize)
		return;

	in &gt;&gt; theString;
	blockSize = 0;
	sendMessage();
}

void FortuneThread::sendMessage()
{
	QByteArray block;
	QDataStream out(&amp;block, QIODevice::WriteOnly);
	out.setVersion(QDataStream::Qt_4_0);

	out &lt;&lt; (quint16)0;
	out &lt;&lt; theString;
	out.device()-&gt;seek(0);
	out &lt;&lt; (quint16)(block.size() - sizeof(quint16));

	tcpSocket-&gt;write(block);
}


//main.cpp
#include &lt;QApplication&gt;
#include &lt;QtCore&gt;
#include "dialog.h"

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);
    Dialog dialog;
    dialog.show();
    return dialog.exec();
}






//客户端
//client.h
#ifndef TRYCLI_H_
#define TRYCLI_H_

#include &lt;QtNetwork&gt;
#include &lt;QtGui&gt;
#include &lt;QtCore&gt;

class Client : public QWidget
{
	Q_OBJECT
private:
	bool isConnected;
	QLineEdit *serverIpEdit;
	QLabel *label;
	QLineEdit *strEdit;
	QPushButton *startButton;

	QTcpSocket *tcpClient;
	quint16 blockSize;
	QString sendString;
	QString readString;

public:
	Client();
	~Client();

	public slots:
		void displayError(QAbstractSocket::SocketError socketError);
		void newConnect();
		void readMessage();
		void sendMessage();

};

#endif


//client.cpp
#include "client.h"
#include &lt;QtGui/QMessageBox&gt;
#include &lt;QtGui/QHBoxLayout&gt;
#include &lt;QtEvents&gt;

Client::Client()
{
	setWindowTitle("Client");
	resize(300, 100);

	serverIpEdit = new QLineEdit("127.0.0.1");
	startButton = new QPushButton("start");
	strEdit = new QLineEdit;
	label = new QLabel("Emtpy");
	isConnected = false;

	QVBoxLayout *layout = new QVBoxLayout;
	layout-&gt;addWidget(serverIpEdit);
	layout-&gt;addWidget(label);
	layout-&gt;addWidget(strEdit);
	layout-&gt;addWidget(startButton);
	setLayout(layout);

	tcpClient = new QTcpSocket(this);
	connect(startButton, SIGNAL(clicked()), this, SLOT(newConnect()));
	connect(tcpClient, SIGNAL(connected()), this, SLOT(sendMessage()));
	connect(tcpClient, SIGNAL(readyRead()), this, SLOT(readMessage()));
	connect(tcpClient, SIGNAL(error(QAbstractSocket::SocketError)),
		this, SLOT(displayError(QAbstractSocket::SocketError)));
}

Client::~Client()
{

}

void Client::newConnect()
{
	blockSize = 0;
	if(!isConnected)
	{
		tcpClient-&gt;abort();
		tcpClient-&gt;connectToHost(serverIpEdit-&gt;text(), 8888);
		isConnected = true;
	}
	else
		sendMessage();
}

void Client::sendMessage()
{
	QByteArray block;
	QDataStream out(&amp;block, QIODevice::WriteOnly);
	out.setVersion(QDataStream::Qt_4_0);

	sendString = strEdit-&gt;text();
	out &lt;&lt; (quint16)0;
	out &lt;&lt; sendString;
	out.device()-&gt;seek(0);
	out &lt;&lt; (quint16)(block.size() - sizeof(quint16));

	tcpClient-&gt;write(block);
}

void Client::readMessage()
{
	QDataStream in(tcpClient);
	in.setVersion(QDataStream::Qt_4_0);

	if (blockSize == 0)
	{
		if (tcpClient-&gt;bytesAvailable() &lt; (int)sizeof(quint16))
			return;
		in &gt;&gt; blockSize;
	}
	if (tcpClient-&gt;bytesAvailable() &lt; blockSize)
		return;

	in &gt;&gt; readString;
	label-&gt;setText(readString);
}

void Client::displayError(QAbstractSocket::SocketError socketError)
{
	switch (socketError) {
	case QAbstractSocket::RemoteHostClosedError:
		break;
	case QAbstractSocket::HostNotFoundError:
		QMessageBox::information(this, tr("Fortune Client"),
			tr("The host was not found. Please check the "
			"host name and port settings."));
		break;
	case QAbstractSocket::ConnectionRefusedError:
		QMessageBox::information(this, tr("Fortune Client"),
			tr("The connection was refused by the peer. "
			"Make sure the fortune server is running, "
			"and check that the host name and port "
			"settings are correct."));
		break;
	default:
		QMessageBox::information(this, tr("Fortune Client"),
			tr("The following error occurred: %1.")
			.arg(tcpClient-&gt;errorString()));
	}
}


//main.cpp
#include "client.h"
#include &lt;QtGui/QApplication&gt;

int main(int argc, char *argv[])
{
	QApplication a(argc, argv);
	Client w;
	w.show();
	return a.exec();
}
</pre>
<p></p>
<p><br>
</p>
代码功能：和上一个例子一样，客户端先向服务发送一个字符串，服务器收到后，再向客户端发送一个同样的字符串（回射字符串）<br>
<br>

</div>
<div class="share_buttons" id="sharePanel"><span>分享到：</span> <a name="sina" class="share_sina" title="分享到新浪微博"></a><a name="qq" class="share_qq" title="分享到腾讯微博"></a></div>
<!--192.168.1.236-->
<div class="article_next_prev">
    <li class="prev_article"><span>上一篇：</span><a href="http://blog.csdn.net/aaa20090987/article/details/6789550">QT：Qsocket长连接的实现（单线程服务器）</a></li>
    <li class="next_article"><span>下一篇：</span><a href="http://blog.csdn.net/aaa20090987/article/details/6790618">Linux下解压压缩及打包命令大全</a></li>
</div>


    
</div>
<div id="ad_cen"><iframe id="ad_frm_0" frameborder="0" scrolling="no" style="border-width: 0px; overflow: hidden; width: 733px; height: 0px;" src="./01_files/ad(1).htm"></iframe></div>
<script type="text/javascript">
    new Ad(4, 'ad_cen');
</script>
<div id="comment_title" class="panel_head">查看评论<a name="comments"></a></div>
<div id="comment_list"><dl class="comment_item comment_topic" id="comment_item_2288984"><dt class="comment_head" floor="4">4楼 <span class="user"><a class="username" href="http://blog.csdn.net/gxlxzcl" target="_blank">gxlxzcl</a> <span class="ptime">2012-07-18 14:37发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2288984" username="gxlxzcl"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/gxlxzcl" target="_blank"><img src="./01_files/3_gxlxzcl.jpg" width="40" height="40"></a></dd><dd class="comment_body">按你现在的设计，一个客户端创建一个线程。不说上千个Client端同时上来，几百个你的电脑CPU直接上100%.</dd><dl class="comment_item comment_reply" id="comment_item_2289207"><dt class="comment_head" floor="4">Re: <span class="user"><a class="username" href="http://blog.csdn.net/AAA20090987" target="_blank">AAA20090987</a> <span class="ptime">2012-07-18 16:07发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2289207" username="AAA20090987"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/AAA20090987" target="_blank"><img src="./01_files/3_aaa20090987.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复gxlxzcl：这只是一个用来演示的例子而已，如果客户端多的话，肯定不能这样设计。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2237979"><dt class="comment_head" floor="3">3楼 <span class="user"><a class="username" href="http://blog.csdn.net/jsjs20002" target="_blank">jsjs20002</a> <span class="ptime">2012-05-30 18:23发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2237979" username="jsjs20002"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/jsjs20002" target="_blank"><img src="./01_files/3_jsjs20002.jpg" width="40" height="40"></a></dd><dd class="comment_body">你的多线程能多次通信么？？？？</dd><dl class="comment_item comment_reply" id="comment_item_2241063"><dt class="comment_head" floor="3">Re: <span class="user"><a class="username" href="http://blog.csdn.net/AAA20090987" target="_blank">AAA20090987</a> <span class="ptime">2012-06-02 20:57发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2241063" username="AAA20090987"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/AAA20090987" target="_blank"><img src="./01_files/3_aaa20090987.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复jsjs20002：可以，对其的子线程是在连接成功时开启，关闭连接时结束的，在这段时间内可以无限次通信。</dd></dl></dl><dl class="comment_item comment_topic" id="comment_item_2123138"><dt class="comment_head" floor="2">2楼 <span class="user"><a class="username" href="http://blog.csdn.net/l270378034" target="_blank">l270378034</a> <span class="ptime">2012-03-08 14:06发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2123138" username="l270378034"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/l270378034" target="_blank"><img src="./01_files/3_l270378034.jpg" width="40" height="40"></a></dd><dd class="comment_body">从FortuneServer怎么给所有客户端发送数据</dd><dl class="comment_item comment_reply" id="comment_item_2123765"><dt class="comment_head" floor="2">Re: <span class="user"><a class="username" href="http://blog.csdn.net/AAA20090987" target="_blank">AAA20090987</a> <span class="ptime">2012-03-08 21:18发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2123765" username="AAA20090987"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/AAA20090987" target="_blank"><img src="./01_files/3_aaa20090987.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复l270378034：用一个循环，将消息给每个人都发一遍（我只想到这个方法）</dd><dl class="comment_item comment_reply" id="comment_item_2185592"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/yuwenwen2458" target="_blank">yuwenwen2458</a> <span class="ptime">2012-04-17 20:17发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2185592" username="yuwenwen2458"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/yuwenwen2458" target="_blank"><img src="./01_files/3_yuwenwen2458.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复AAA20090987：怎么知道有那些用户在线呢？</dd><dl class="comment_item comment_reply" id="comment_item_2185677"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/AAA20090987" target="_blank">AAA20090987</a> <span class="ptime">2012-04-17 21:27发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2185677" username="AAA20090987"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/AAA20090987" target="_blank"><img src="./01_files/3_aaa20090987.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复yuwenwen2458：在服务器端保存一个列表，当一个客户登录时就把他加入列表，退出时就将他清除。</dd><dl class="comment_item comment_reply" id="comment_item_2458110" style="margin-left:0;"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/ta893115871" target="_blank">草莓的味道</a> <span class="ptime">2012-12-06 13:52发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="2458110" username="ta893115871"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/ta893115871" target="_blank"><img src="./01_files/3_ta893115871.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复AAA20090987：那这个保存客户端的列表应该写在哪呢</dd></dl></dl></dl></dl></dl><dl class="comment_item comment_topic" id="comment_item_1987118"><dt class="comment_head" floor="1">1楼 <span class="user"><a class="username" href="http://blog.csdn.net/tiantian123456" target="_blank">tiantian123456</a> <span class="ptime">2011-10-15 13:08发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1987118" username="tiantian123456"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/tiantian123456" target="_blank"><img src="./01_files/3_tiantian123456.jpg" width="40" height="40"></a></dd><dd class="comment_body">你很喜欢袁朗啊，呵呵，我也正在学这部分，看到你的博客和你在CSDN上面的问题了。呵呵</dd><dl class="comment_item comment_reply" id="comment_item_1989447"><dt class="comment_head" floor="1">Re: <span class="user"><a class="username" href="http://blog.csdn.net/AAA20090987" target="_blank">AAA20090987</a> <span class="ptime">2011-10-18 10:53发表</span>  <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#reply" class="cmt_btn reply" title="回复">[回复]</a> <span class="comment_manage" style="display:none;" commentid="1989447" username="AAA20090987"> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#quote" class="cmt_btn quote" title="引用">[引用]</a> <a href="http://blog.csdn.net/aaa20090987/article/details/6789562#report" class="cmt_btn report" title="举报">[举报]</a></span></span></dt><dd class="comment_userface"><a href="http://blog.csdn.net/AAA20090987" target="_blank"><img src="./01_files/3_aaa20090987.jpg" width="40" height="40"></a></dd><dd class="comment_body">回复tiantian123456：呵呵，我佩服他的实力，喜欢他的潇洒</dd></dl></dl><div class="clear"></div></div>
<div id="comment_bar" style="display: none;"></div>
<div id="comment_form"><div class="guest_link">您还没有登录,请<a href="http://passport.csdn.net/account/login?from=http%3A%2F%2Fblog.csdn.net%2Faaa20090987%2Farticle%2Fdetails%2F6789562">[登录]</a>或<a href="http://passport.csdn.net/account/register?from=http%3A%2F%2Fblog.csdn.net%2Faaa20090987%2Farticle%2Fdetails%2F6789562">[注册]</a></div></div>
<div class="announce">* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '6789562';
    var commentscount = 11;
    var islock = false
</script>
<script type="text/javascript" src="./01_files/comment.js"></script>
<div id="ad_bot"><iframe id="ad_frm_1" frameborder="0" scrolling="no" style="border-width: 0px; overflow: hidden; width: 733px; height: 171px;" src="./01_files/ad(2).htm"></iframe></div>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>

<div id="d-top">
<a href="http://blog.csdn.net/aaa20090987/article/details/6789562#" onclick="javascript:document.body.scrollTop=0;document.documentElement.scrollTop=0;this.blur();return false;" title="回到顶部">
<img src="./01_files/top.png" alt="TOP"></a>
</div>



<div class="clear"></div>
</div>
</div>

<div id="side">
<div class="side">
<div id="panel_Profile" class="panel">
    <ul class="panel_head"><span>个人资料</span></ul>
    <ul class="panel_body profile">
        <div id="blog_userface">
            <a href="http://my.csdn.net/AAA20090987" target="_blank">
            <img src="./01_files/1_aaa20090987.jpg" title="访问我的空间" style="max-width:90%">
            </a>
            <br>
            <span><a href="http://my.csdn.net/AAA20090987" class="user_name" target="_blank">AAA20090987</a></span>
        </div>
<div class="interact">
<!--<a href="#" class="attented" title="已关注"></a>-->
<a href="http://blog.csdn.net/aaa20090987/article/details/6789562#" class="attent" id="span_add_follow" title="[加关注]"></a>
<a href="http://my.csdn.net/my/letter/send/AAA20090987" class="letter" title="[发私信]"></a>
</div>
        <div id="blog_medal">
        <div id="bms_box"><a href="http://medal.blog.csdn.net/allmedal.aspx" target="_blank"><img src="./01_files/holdon_s2.gif" onmouseover="m_over_m(this,0)" onmouseout="m_out_m()" alt=""></a></div></div>
        <ul id="blog_rank">
            <li>访问：<span>93034次</span></li>
            <li>积分：<span>2030分</span></li>
            <li>排名：<span>第3278名</span></li>
        </ul>
        <ul id="blog_statistics">
            <li>原创：<span>81篇</span></li>
            <li>转载：<span>122篇</span></li>
            <li>译文：<span>0篇</span></li>
            <li>评论：<span>133条</span></li>
        </ul>
    </ul>
</div>
<script type="text/javascript">
    var _blogger = 'AAA20090987';
</script>
<script type="text/javascript">
$(document).ready(function () {
    var un = getUN().toLowerCase();
    if (un == _blogger.toLowerCase()) {
        $('.interact').hide();
    } else if(un) {
        var url = "http://my.csdn.net/index.php/follow/check_is_followed/" + encodeURIComponent(un) + "/" + encodeURIComponent(_blogger) + "?jsonpcallback=?";
        $.getJSON(url, {}, function (data) {
            if (data.succ == 1 && data.info == 1) {
                $('#span_add_follow').attr('class', 'attented');
            } else {
                $('#span_add_follow').click(guanzhu);
            }
        }, 'json');
    }
});
function guanzhu() {
    var url = "http://my.csdn.net/index.php/follow/do_follow?jsonpcallback=?";
    $.getJSON(url, { "username": _blogger }, function (data) {
        if (data.succ == 1) {
            alert('关注成功！');
            $('#span_add_follow').attr('class', 'attented').click(function () { return false; });
        } else {
            alert(data.msg);
        }
    });
    return false;
}
function getUN() {
    var m = document.cookie.match(new RegExp("(^| )UserName=([^;]*)(;|$)"));
    if (m) return m[2];
    else return '';
}
</script>

<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字"></span>
        <input id="btnSubmit" type="submit" value="搜索" title="search in blog">
        <input type="hidden" name="q" id="inputQ">
        <input type="hidden" name="t" value="blog">
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="panel_Category" class="panel">
    <ul class="panel_head"><span>文章分类</span></ul>
    <ul class="panel_body">
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/850457">C/C++</a><span>(34)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/850456">linux</a><span>(40)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1269217">Linux小程序</a><span>(7)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1212988">Unix环境高级编程</a><span>(16)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1262595">UNIX网络编程</a><span>(5)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1259391">TCP/IP协议</a><span>(6)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/850455">QT学习</a><span>(26)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/880004">QT小例子</a><span>(27)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1274714">数据库</a><span>(8)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1286408">Windows编程</a><span>(10)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1094916">软件工程</a><span>(3)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1208166">其他技术问题</a><span>(14)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/850458">杂七杂八</a><span>(9)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1208167">程序人生</a><span>(10)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/aaa20090987/article/category/1259392">时事政治</a><span>(4)</span>
        </li>
    </ul>
</div><div id="panel_Archive" class="panel">
    <ul class="panel_head"><span>文章存档</span></ul>
    <ul class="panel_body">
        <div id="archive_list"><li><a href="http://blog.csdn.net/aaa20090987/article/month/2013/01">2013年01月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/12">2012年12月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/11">2012年11月</a><span>(21)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/10">2012年10月</a><span>(10)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/09">2012年09月</a><span>(27)</span></li><span class="hidelist" style="display:none;"><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/08">2012年08月</a><span>(10)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/07">2012年07月</a><span>(10)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/06">2012年06月</a><span>(9)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/05">2012年05月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/04">2012年04月</a><span>(13)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/03">2012年03月</a><span>(12)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/02">2012年02月</a><span>(10)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2012/01">2012年01月</a><span>(10)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2011/12">2011年12月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2011/11">2011年11月</a><span>(11)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2011/10">2011年10月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2011/09">2011年09月</a><span>(11)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2011/08">2011年08月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/aaa20090987/article/month/2011/07">2011年07月</a><span>(4)</span></li></span><div id="archive_list_button" class="list_closed">展开</div></div>
    </ul>
</div>
<div id="hotarticls" class="panel">
    <ul class="panel_head"><span>阅读排行</span></ul>
    <ul class="panel_body itemlist">
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/6998514" title="自己动手写聊天软件">自己动手写聊天软件</a><span>(3846)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7054750" title="QT：不规则窗口的实现">QT：不规则窗口的实现</a><span>(2916)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7308296" title="哈佛的幸福课笔记">哈佛的幸福课笔记</a><span>(2549)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7854405" title="降级论：智商高的IT人，你比沙县老板强吗">降级论：智商高的IT人，你比沙县老板强吗</a><span>(2230)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/6681907" title="GUI（主）线程与子线程之间的通信">GUI（主）线程与子线程之间的通信</a><span>(2215)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/8043985" title="80后的童鞋们，还记得大明湖畔的克林顿时代吗？">80后的童鞋们，还记得大明湖畔的克林顿时代吗？</a><span>(2161)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7738425" title="如何用美剧真正提升你的英语水平">如何用美剧真正提升你的英语水平</a><span>(1965)</span>
        </li>
        <li>
            <a href="./01_files/01.htm" title="QT：Qsocket长连接的实现（多线程服务器）">QT：Qsocket长连接的实现（多线程服务器）</a><span>(1817)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/6858611" title="QT：界面切换之飞入飞出">QT：界面切换之飞入飞出</a><span>(1811)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7068234" title="QT：IP地址输入框的实现">QT：IP地址输入框的实现</a><span>(1783)</span>
        </li>
    </ul>
</div>
<div id="hotarticls2" class="panel">
    <ul class="panel_head"><span>评论排行</span></ul>
    <ul class="panel_body itemlist">
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/6998514" title="自己动手写聊天软件">自己动手写聊天软件</a><span>(45)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7223026" title="QT：多线程下载文件">QT：多线程下载文件</a><span>(12)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/6789550" title="QT：Qsocket长连接的实现（单线程服务器）">QT：Qsocket长连接的实现（单线程服务器）</a><span>(12)</span>
        </li>
        <li>
            <a href="./01_files/01.htm" title="QT：Qsocket长连接的实现（多线程服务器）">QT：Qsocket长连接的实现（多线程服务器）</a><span>(11)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/6858611" title="QT：界面切换之飞入飞出">QT：界面切换之飞入飞出</a><span>(8)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/6743803" title="可以供MFC调用的，QT实现的DLL（qtwinmigrate实现）">可以供MFC调用的，QT实现的DLL（qtwinmigrate实现）</a><span>(6)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7054750" title="QT：不规则窗口的实现">QT：不规则窗口的实现</a><span>(4)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7280602" title="浅析linux中鼠标数据读取">浅析linux中鼠标数据读取</a><span>(4)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7190255" title="QT：高手们的博客">QT：高手们的博客</a><span>(4)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/aaa20090987/article/details/7882274" title="《Unix环境高级编程》：递归遍历目录层次结构，并按文件类型计数">《Unix环境高级编程》：递归遍历目录层次结构，并按文件类型计数</a><span>(4)</span>
        </li>
    </ul>
</div>
<div id="homepageArticles" class="panel">
    <ul class="panel_head"><span>推荐文章</span></ul>
    <ul class="panel_body" id="ad_commend">
    <iframe id="ad_frm_2" frameborder="0" scrolling="no" style="border-width: 0px; overflow: hidden; width: 183px; height: 268px;" src="./01_files/ad.htm"></iframe></ul>
</div>
<script type="text/javascript">
    new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/7179475#comments">QT：有序排放多个按钮并处理它们的信号</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/HerryXuli" class="user_name">HerryXuli</a>:
button = new QPushButton(this);找的就是这种方法啊 循环生成按钮 谢了
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/6998514#comments">自己动手写聊天软件</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/u4110122855" class="user_name">xixi</a>:
你这个程序的核心是socket 编程吗？
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/6789562#comments">QT：Qsocket长连接的实现（多线程服务器）</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/ta893115871" class="user_name">草莓的味道</a>:
@AAA20090987:那这个保存客户端的列表应该写在哪呢
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/7882274#comments">《Unix环境高级编程》：递归遍历目录层次结构，并按文件类型计数</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/cclive1601" class="user_name">cclive1601</a>:
博主，回答我啊
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/6998514#comments">自己动手写聊天软件</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/ZICHUN007" class="user_name">ZICHUN007</a>:
@AAA20090987:谢谢！
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/7882274#comments">《Unix环境高级编程》：递归遍历目录层次结构，并按文件类型计数</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/cclive1601" class="user_name">cclive1601</a>:
在你说的这里是一个指针，但是我想问的是关于这个函数func()的相关信息，比如他的作用是干什么的？返...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/7882274#comments">《Unix环境高级编程》：递归遍历目录层次结构，并按文件类型计数</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/AAA20090987" class="user_name">AAA20090987</a>:
@cclive1601:这是一个函数指针，被作为一个函数的参数了static int dopath(...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/6998514#comments">自己动手写聊天软件</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/AAA20090987" class="user_name">AAA20090987</a>:
@ZICHUN007:你给出的信息太少，无法判断。QT的自带文档中有网络传输的例子，你可以借鉴一下。
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/7882274#comments">《Unix环境高级编程》：递归遍历目录层次结构，并按文件类型计数</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/cclive1601" class="user_name">cclive1601</a>:
我想问一下博主，第88行出现的那个func（）函数是一个什么意思呢？功能是什么？在哪里出现过呢
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/AAA20090987/article/details/6998514#comments">自己动手写聊天软件</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/ZICHUN007" class="user_name">ZICHUN007</a>:
楼主您好，我正在仿照您的程序做这样一个聊天软件建立连接，注册，登陆已经完成，到了添加好友和在线聊天现...
    </p>
    </li>
</ul>
</div>
</div>
<div class="clear"></div>
</div>

<div class="clear"></div>
</div>
<script type="text/javascript" src="./01_files/shCore-src.js"></script>
<script type="text/javascript" src="./01_files/ZeroClipboard.js"></script>
<script type="text/javascript" src="./01_files/article_code.js"></script>
<script type="text/javascript" src="./01_files/cnick.js"></script>

<script type="text/javascript" src="./01_files/show.js"></script>
<script type="text/javascript" src="./01_files/showblogmedal.ashx"></script>

<script type="text/javascript" src="./01_files/publib_footer.js"></script><link rel="stylesheet" type="text/css" href="./01_files/pub_footer_2012.css"><div class="pub_footerall"><dl><dt></dt> <dd><a href="http://www.csdn.net/company/about.html" target="_blank">公司简介</a>|<a href="http://www.csdn.net/company/recruit.html" target="_blank">招贤纳士</a>|<a href="http://www.csdn.net/company/marketing.html" target="_blank">广告服务</a>|<a href="http://www.csdn.net/company/account.html" target="_blank">银行汇款帐号</a>|<a href="http://www.csdn.net/company/contact.html" target="_blank">联系方式</a>|<a href="http://www.csdn.net/company/statement.html" target="_blank">版权声明</a>|<a href="http://www.csdn.net/company/layer.html" target="_blank">法律顾问</a>|<a href="mailto:webmaster@csdn.net">问题报告</a></dd><dd>京&nbsp;ICP&nbsp;证&nbsp;070598&nbsp;号</dd><dd>北京创新乐知信息技术有限公司 版权所有</dd><dd>世纪乐知(北京)网络技术有限公司 提供技术支持</dd><dd>江苏乐知网络技术有限公司 提供商务支持</dd><dd><img src="./01_files/ico_email.gif" alt="" title=""> 联系邮箱：webmaster(at)csdn.net</dd><dd>Copyright © 1999-2012, CSDN.NET, All Rights Reserved&nbsp;<a href="http://www.hd315.gov.cn/beian/view.asp?bianhao=010202001032100010" target="_blank"><img src="./01_files/gongshang_logos.gif" alt="GongshangLogo" title=""></a></dd></dl></div>

<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script><img src="./01_files/pv.aspx" border="0" width="0" height="0">
<script type="text/javascript" src="./01_files/counter.js"></script><script type="text/javascript" charset="UTF-8" src="./01_files/msg.popup.js"></script>

<!--ad.csdn.net-->
<script type="text/javascript" src="./01_files/ad-blog.js"></script><script type="text/javascript" src="./01_files/ad-ms446.js"></script>




</div>

</body><style type="text/css">embed[type*="application/x-shockwave-flash"],embed[src*=".swf"],object[type*="application/x-shockwave-flash"],object[codetype*="application/x-shockwave-flash"],object[src*=".swf"],object[codebase*="swflash.cab"],object[classid*="D27CDB6E-AE6D-11cf-96B8-444553540000"],object[classid*="d27cdb6e-ae6d-11cf-96b8-444553540000"],object[classid*="D27CDB6E-AE6D-11cf-96B8-444553540000"]{	display: none !important;}</style><span id="skype_highlighting_settings" display="none" autoextractnumbers="1"></span><object id="skype_plugin_object" location.href="http://blog.csdn.net/aaa20090987/article/details/6789562" location.hostname="blog.csdn.net" style="position: absolute; visibility: hidden; left: -100px; top: -100px;" width="0" height="0" type="application/x-vnd.skype.toolbars.npplugin.4.2.0"></object></html>