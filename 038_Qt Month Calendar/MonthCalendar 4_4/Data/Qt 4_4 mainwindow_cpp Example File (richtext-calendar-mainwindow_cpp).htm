<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0071)http://web.mit.edu/qt-dynamic/www/richtext-calendar-mainwindow-cpp.html -->
<HTML lang=en xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>Qt 4.4: mainwindow.cpp Example File (richtext/calendar/mainwindow.cpp)</TITLE>
<META http-equiv=Content-Type content="text/html; charset=gb2312"><LINK 
href="Qt%204_4%20mainwindow_cpp%20Example%20File%20(richtext-calendar-mainwindow_cpp).files/classic.css" 
type=text/css rel=stylesheet>
<META content="MSHTML 6.00.6000.16981" name=GENERATOR></HEAD>
<BODY>
<TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD vAlign=top align=left width=32><A 
      href="http://www.trolltech.com/products/qt"><IMG 
      src="Qt%204_4%20mainwindow_cpp%20Example%20File%20(richtext-calendar-mainwindow_cpp).files/qt-logo.png" 
      align=left border=0></A></TD>
    <TD width=1>&nbsp;&nbsp;</TD>
    <TD class=postheader vAlign=center><A 
      href="http://web.mit.edu/qt-dynamic/www/index.html"><FONT 
      color=#004faf>Home</FONT></A>&nbsp;， <A 
      href="http://web.mit.edu/qt-dynamic/www/namespaces.html"><FONT 
      color=#004faf>All&nbsp;Namespaces</FONT></A>&nbsp;， <A 
      href="http://web.mit.edu/qt-dynamic/www/classes.html"><FONT 
      color=#004faf>All&nbsp;Classes</FONT></A>&nbsp;， <A 
      href="http://web.mit.edu/qt-dynamic/www/mainclasses.html"><FONT 
      color=#004faf>Main&nbsp;Classes</FONT></A>&nbsp;， <A 
      href="http://web.mit.edu/qt-dynamic/www/groups.html"><FONT 
      color=#004faf>Grouped&nbsp;Classes</FONT></A>&nbsp;， <A 
      href="http://web.mit.edu/qt-dynamic/www/modules.html"><FONT 
      color=#004faf>Modules</FONT></A>&nbsp;， <A 
      href="http://web.mit.edu/qt-dynamic/www/functions.html"><FONT 
      color=#004faf>Functions</FONT></A></TD>
    <TD vAlign=top align=right width=230></TD></TR></TBODY></TABLE>
<H1 class=title>mainwindow.cpp Example File<BR><SPAN 
class=small-subtitle>richtext/calendar/mainwindow.cpp</SPAN> </H1><PRE><SPAN class=comment> /****************************************************************************
 **
 ** Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 ** Contact: Qt Software Information (qt-info@nokia.com)
 **
 ** This file is part of the example classes of the Qt Toolkit.
 **
 ** Commercial Usage
 ** Licensees holding valid Qt Commercial licenses may use this file in
 ** accordance with the Qt Commercial License Agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
 ** a written agreement between you and Nokia.
 **
 **
 ** GNU General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU
 ** General Public License versions 2.0 or 3.0 as published by the Free
 ** Software Foundation and appearing in the file LICENSE.GPL included in
 ** the packaging of this file.  Please review the following information
 ** to ensure GNU General Public Licensing requirements will be met:
 ** http://www.fsf.org/licensing/licenses/info/GPLv2.html and
 ** http://www.gnu.org/copyleft/gpl.html.  In addition, as a special
 ** exception, Nokia gives you certain additional rights. These rights
 ** are described in the Nokia Qt GPL Exception version 1.3, included in
 ** the file GPL_EXCEPTION.txt in this package.
 **
 ** Qt for Windows(R) Licensees
 ** As a special exception, Nokia, as the sole copyright holder for Qt
 ** Designer, grants users of the Qt/Eclipse Integration plug-in the
 ** right for the Qt/Eclipse Integration to link to functionality
 ** provided by Qt Designer and its related libraries.
 **
 ** If you are unsure which license is appropriate for your use, please
 ** contact the sales department at qt-sales@nokia.com.
 **
 ****************************************************************************/</SPAN>

 #include &lt;QtGui&gt;

 #include "mainwindow.h"

 MainWindow::MainWindow()
 {
     selectedDate = QDate::currentDate();
     fontSize = 10;

     QWidget *centralWidget = new QWidget;

     QLabel *dateLabel = new QLabel(tr("Date:"));
     QComboBox *monthCombo = new QComboBox;

     for (int month = 1; month &lt;= 12; ++month)
         monthCombo-&gt;addItem(QDate::longMonthName(month));

     QDateTimeEdit *yearEdit = new QDateTimeEdit;
     yearEdit-&gt;setDisplayFormat("yyyy");
     yearEdit-&gt;setDateRange(QDate(1753, 1, 1), QDate(8000, 1, 1));

     monthCombo-&gt;setCurrentIndex(selectedDate.month() - 1);
     yearEdit-&gt;setDate(selectedDate);

     QLabel *fontSizeLabel = new QLabel(tr("Font size:"));
     QSpinBox *fontSizeSpinBox = new QSpinBox;
     fontSizeSpinBox-&gt;setRange(1, 64);
     fontSizeSpinBox-&gt;setValue(10);

     editor = new QTextBrowser;
     insertCalendar();

     connect(monthCombo, SIGNAL(activated(int)), this, SLOT(setMonth(int)));
     connect(yearEdit, SIGNAL(dateChanged(QDate)), this, SLOT(setYear(QDate)));
     connect(fontSizeSpinBox, SIGNAL(valueChanged(int)),
             this, SLOT(setFontSize(int)));

     QHBoxLayout *controlsLayout = new QHBoxLayout;
     controlsLayout-&gt;addWidget(dateLabel);
     controlsLayout-&gt;addWidget(monthCombo);
     controlsLayout-&gt;addWidget(yearEdit);
     controlsLayout-&gt;addSpacing(24);
     controlsLayout-&gt;addWidget(fontSizeLabel);
     controlsLayout-&gt;addWidget(fontSizeSpinBox);
     controlsLayout-&gt;addStretch(1);

     QVBoxLayout *centralLayout = new QVBoxLayout;
     centralLayout-&gt;addLayout(controlsLayout);
     centralLayout-&gt;addWidget(editor, 1);
     centralWidget-&gt;setLayout(centralLayout);

     setCentralWidget(centralWidget);
 }

 void MainWindow::insertCalendar()
 {
     editor-&gt;clear();
     QTextCursor cursor = editor-&gt;textCursor();
     cursor.beginEditBlock();

     QDate date(selectedDate.year(), selectedDate.month(), 1);

     QTextTableFormat tableFormat;
     tableFormat.setAlignment(Qt::AlignHCenter);
     tableFormat.setBackground(QColor("#e0e0e0"));
     tableFormat.setCellPadding(2);
     tableFormat.setCellSpacing(4);
     QVector&lt;QTextLength&gt; constraints;
     constraints &lt;&lt; QTextLength(QTextLength::PercentageLength, 14)
                 &lt;&lt; QTextLength(QTextLength::PercentageLength, 14)
                 &lt;&lt; QTextLength(QTextLength::PercentageLength, 14)
                 &lt;&lt; QTextLength(QTextLength::PercentageLength, 14)
                 &lt;&lt; QTextLength(QTextLength::PercentageLength, 14)
                 &lt;&lt; QTextLength(QTextLength::PercentageLength, 14)
                 &lt;&lt; QTextLength(QTextLength::PercentageLength, 14);
     tableFormat.setColumnWidthConstraints(constraints);

     QTextTable *table = cursor.insertTable(1, 7, tableFormat);

     QTextFrame *frame = cursor.currentFrame();
     QTextFrameFormat frameFormat = frame-&gt;frameFormat();
     frameFormat.setBorder(1);
     frame-&gt;setFrameFormat(frameFormat);

     QTextCharFormat format = cursor.charFormat();
     format.setFontPointSize(fontSize);

     QTextCharFormat boldFormat = format;
     boldFormat.setFontWeight(QFont::Bold);

     QTextCharFormat highlightedFormat = boldFormat;
     highlightedFormat.setBackground(Qt::yellow);

     for (int weekDay = 1; weekDay &lt;= 7; ++weekDay) {
         QTextTableCell cell = table-&gt;cellAt(0, weekDay-1);
         QTextCursor cellCursor = cell.firstCursorPosition();
         cellCursor.insertText(QString("%1").arg(QDate::longDayName(weekDay)),
                               boldFormat);
     }

     table-&gt;insertRows(table-&gt;rows(), 1);

     while (date.month() == selectedDate.month()) {
         int weekDay = date.dayOfWeek();
         QTextTableCell cell = table-&gt;cellAt(table-&gt;rows()-1, weekDay-1);
         QTextCursor cellCursor = cell.firstCursorPosition();

         if (date == QDate::currentDate())
             cellCursor.insertText(QString("%1").arg(date.day()), highlightedFormat);
         else
             cellCursor.insertText(QString("%1").arg(date.day()), format);

         date = date.addDays(1);
         if (weekDay == 7 &amp;&amp; date.month() == selectedDate.month())
             table-&gt;insertRows(table-&gt;rows(), 1);
     }

     cursor.endEditBlock();
     setWindowTitle(tr("Calendar for %1 %2"
         ).arg(QDate::longMonthName(selectedDate.month())
         ).arg(selectedDate.year()));
 }

 void MainWindow::setFontSize(int size)
 {
     fontSize = size;
     insertCalendar();
 }

 void MainWindow::setMonth(int month)
 {
     selectedDate = QDate(selectedDate.year(), month + 1, selectedDate.day());
     insertCalendar();
 }

 void MainWindow::setYear(QDate date)
 {
     selectedDate = QDate(date.year(), selectedDate.month(), selectedDate.day());
     insertCalendar();
 }</PRE>
<P>
<ADDRESS>
<HR>

<DIV align=center>
<TABLE cellSpacing=0 width="100%" border=0>
  <TBODY>
  <TR class=address>
    <TD align=left width="30%">Copyright &copy; 2008 Nokia</TD>
    <TD align=middle width="40%"><A 
      href="http://web.mit.edu/qt-dynamic/www/trademarks.html">Trademarks</A></TD>
    <TD align=right width="30%">
      <DIV align=right>Qt 
4.4.3</DIV></TD></TR></TBODY></TABLE></DIV></ADDRESS></BODY></HTML>
