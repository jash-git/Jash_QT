#############################################################################
# Makefile for building liveqt
# Generated by tmake at 12:46, 2002/04/23
#     Project: liveqt
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	arm-linux-gcc
CXX	=	arm-linux-g++
CFLAGS	=	-pipe -g -fno-default-inline -fbounds-check -Wall -W -O2 -DUSE_QPE -DNO_DEBUG
CXXFLAGS=	-pipe -DQWS -fno-exceptions -fno-rtti -g -fno-default-inline -fbounds-check -Wall -W -O2 -DUSE_QPE -DNO_DEBUG
INCPATH	=	-I$(HOME)/qpe-1.4.0/library -I$(QTDIR)/include
LINK	=	arm-linux-g++
LFLAGS	=	-g -fno-default-inline -fbounds-check
LIBS	=	$(SUBLIBS) -L$(QTDIR)/lib -lqpe -lqte
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	ljinterface.h \
		ljhttp.h \
		ljconfigparser.h \
		md5.h \
		mainwindowimpl.h
SOURCES =	main.cpp \
		ljinterface.cpp \
		ljhttp.cpp \
		ljconfigparser.cpp \
		md5.c \
		mainwindowimpl.cpp
OBJECTS =	main.o \
		ljinterface.o \
		ljhttp.o \
		ljconfigparser.o \
		md5.o \
		mainwindowimpl.o \
		mainwindow.o \
		login.o
INTERFACES =	mainwindow.ui \
		login.ui
UICDECLS =	mainwindow.h \
		login.h
UICIMPLS =	mainwindow.cpp \
		login.cpp
SRCMOC	=	moc_ljhttp.cpp \
		moc_mainwindowimpl.cpp \
		moc_mainwindow.cpp \
		moc_login.cpp
OBJMOC	=	moc_ljhttp.o \
		moc_mainwindowimpl.o \
		moc_mainwindow.o \
		moc_login.o
DIST	=	
TARGET	=	liveqt
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake:
	tmake liveqt.pro

dist:
	$(TAR) liveqt.tar liveqt.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) liveqt.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

main.o: main.cpp \
		mainwindowimpl.h \
		mainwindow.h \
		login.h \
		ljinterface.h

ljinterface.o: ljinterface.cpp \
		ljhttp.h \
		ljinterface.h \
		ljconfigparser.h \
		md5.h

ljhttp.o: ljhttp.cpp \
		ljhttp.h

ljconfigparser.o: ljconfigparser.cpp \
		ljconfigparser.h \
		ljinterface.h

md5.o: md5.c \
		md5.h

mainwindowimpl.o: mainwindowimpl.cpp \
		mainwindowimpl.h \
		mainwindow.h \
		login.h \
		ljinterface.h

mainwindow.h: mainwindow.ui
	$(UIC) mainwindow.ui -o $(INTERFACE_DECL_PATH)/mainwindow.h

mainwindow.cpp: mainwindow.ui
	$(UIC) mainwindow.ui -i mainwindow.h -o mainwindow.cpp

login.h: login.ui
	$(UIC) login.ui -o $(INTERFACE_DECL_PATH)/login.h

login.cpp: login.ui
	$(UIC) login.ui -i login.h -o login.cpp

mainwindow.o: mainwindow.cpp

login.o: login.cpp

moc_ljhttp.o: moc_ljhttp.cpp \
		ljhttp.h

moc_mainwindowimpl.o: moc_mainwindowimpl.cpp \
		mainwindowimpl.h \
		mainwindow.h \
		login.h \
		ljinterface.h

moc_mainwindow.o: moc_mainwindow.cpp \
		mainwindow.h

moc_login.o: moc_login.cpp \
		login.h

moc_ljhttp.cpp: ljhttp.h
	$(MOC) ljhttp.h -o moc_ljhttp.cpp

moc_mainwindowimpl.cpp: mainwindowimpl.h
	$(MOC) mainwindowimpl.h -o moc_mainwindowimpl.cpp

moc_mainwindow.cpp: mainwindow.h
	$(MOC) mainwindow.h -o moc_mainwindow.cpp

moc_login.cpp: login.h
	$(MOC) login.h -o moc_login.cpp

